<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="2" passed="1">
  <reporter-output>
    <line>
      <![CDATA[Extent Report DirectoryC:\Users\nchao\AppData\Local\Temp\Rar$DRa24020.46156\MyProjectNabil\Walgreens\target\surefire-reports\html]]>
    </line>
  </reporter-output>
  <suite name="Walgreens" duration-ms="31062" started-at="2023-05-28T21:57:21Z" finished-at="2023-05-28T21:57:52Z">
    <groups>
    </groups>
    <test name="test login" duration-ms="31062" started-at="2023-05-28T21:57:21Z" finished-at="2023-05-28T21:57:52Z">
      <class name="tests.TestLogin">
        <test-method status="PASS" signature="extentSetup(org.testng.ITestContext)[pri:0, instance:tests.TestLogin@91161c7]" name="extentSetup" is-config="true" duration-ms="163" started-at="2023-05-28T17:57:21Z" finished-at="2023-05-28T17:57:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6fd5717c]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Extent Report DirectoryC:\Users\nchao\AppData\Local\Temp\Rar$DRa24020.46156\MyProjectNabil\Walgreens\target\surefire-reports\html]]>
            </line>
          </reporter-output>
        </test-method> <!-- extentSetup -->
        <test-method status="PASS" signature="init()[pri:0, instance:tests.TestLogin@91161c7]" name="init" is-config="true" duration-ms="12754" started-at="2023-05-28T17:57:21Z" finished-at="2023-05-28T17:57:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.TestLogin@91161c7]" name="startExtent" is-config="true" duration-ms="5" started-at="2023-05-28T17:57:34Z" finished-at="2023-05-28T17:57:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.TestLogin.loginWithInValidCredentials()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="loginWithInValidCredentials()[pri:0, instance:tests.TestLogin@91161c7]" name="loginWithInValidCredentials" duration-ms="5636" started-at="2023-05-28T17:57:34Z" finished-at="2023-05-28T17:57:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInValidCredentials -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.TestLogin@91161c7]" name="afterEachTestMethod" is-config="true" duration-ms="1148" started-at="2023-05-28T17:57:40Z" finished-at="2023-05-28T17:57:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithInValidCredentials status=SUCCESS method=TestLogin.loginWithInValidCredentials()[pri:0, instance:tests.TestLogin@91161c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.TestLogin@91161c7]" name="tearDown" is-config="true" duration-ms="1" started-at="2023-05-28T17:57:41Z" finished-at="2023-05-28T17:57:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="init()[pri:0, instance:tests.TestLogin@91161c7]" name="init" is-config="true" duration-ms="9224" started-at="2023-05-28T17:57:41Z" finished-at="2023-05-28T17:57:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.TestLogin@91161c7]" name="startExtent" is-config="true" duration-ms="0" started-at="2023-05-28T17:57:50Z" finished-at="2023-05-28T17:57:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.TestLogin.loginWithValidCredentials()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="FAIL" signature="loginWithValidCredentials()[pri:0, instance:tests.TestLogin@91161c7]" name="loginWithValidCredentials" duration-ms="1166" started-at="2023-05-28T17:57:50Z" finished-at="2023-05-28T17:57:51Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at tests.TestLogin.loginWithValidCredentials(TestLogin.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1191)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)
	at org.testng.TestNG.run(TestNG.java:1024)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithValidCredentials -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.TestLogin@91161c7]" name="afterEachTestMethod" is-config="true" duration-ms="1108" started-at="2023-05-28T17:57:51Z" finished-at="2023-05-28T17:57:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithValidCredentials status=FAILURE method=TestLogin.loginWithValidCredentials()[pri:0, instance:tests.TestLogin@91161c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.TestLogin@91161c7]" name="tearDown" is-config="true" duration-ms="0" started-at="2023-05-28T17:57:52Z" finished-at="2023-05-28T17:57:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="generateReport()[pri:0, instance:tests.TestLogin@91161c7]" name="generateReport" is-config="true" duration-ms="24" started-at="2023-05-28T17:57:52Z" finished-at="2023-05-28T17:57:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- tests.TestLogin -->
    </test> <!-- test login -->
  </suite> <!-- Walgreens -->
</testng-results>
